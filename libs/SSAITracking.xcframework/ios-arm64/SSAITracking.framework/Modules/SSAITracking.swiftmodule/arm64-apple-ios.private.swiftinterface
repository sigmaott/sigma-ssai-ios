// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios12.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SSAITracking
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AVKit
import AdSupport
import AppTrackingTransparency
import Foundation
import ProgrammaticAccessLibrary
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import __ObjC
@objc public class SigmaSSAI : ObjectiveC.NSObject, AVFoundation.AVAssetResourceLoaderDelegate, ProgrammaticAccessLibrary.NonceLoaderDelegate, AVFoundation.AVPlayerItemMetadataOutputPushDelegate, AVFoundation.AVPlayerItemLegibleOutputPushDelegate {
  public init(_ videoUrl: Swift.String, _ adsProxy: Swift.String, _ callback: any SSAITracking.SigmaSSAIInterface, _ videoView: UIKit.UIView, _ pilotEnable: Swift.Bool)
  public func setVideoUrl(_ videoUrl: Swift.String)
  public func setShowLog(_ show: Swift.Bool)
  @objc public func nonceLoader(_ nonceLoader: ProgrammaticAccessLibrary.NonceLoader, with request: ProgrammaticAccessLibrary.NonceRequest, didLoad nonceManager: ProgrammaticAccessLibrary.NonceManager)
  @objc public func nonceLoader(_ nonceLoader: ProgrammaticAccessLibrary.NonceLoader, with request: ProgrammaticAccessLibrary.NonceRequest, didFailWith error: any Swift.Error)
  @objc public func metadataOutput(_: AVFoundation.AVPlayerItemMetadataOutput, didOutputTimedMetadataGroups groups: [AVFoundation.AVTimedMetadataGroup], from _: AVFoundation.AVPlayerItemTrack?)
  @objc public func legibleOutput(_: AVFoundation.AVPlayerItemLegibleOutput, didOutputAttributedStrings strings: [Foundation.NSAttributedString], nativeSampleBuffers _: [Any], forItemTime _: CoreMedia.CMTime)
  public func getAsset() -> AVFoundation.AVURLAsset
  public func setPlayer(_ avPlayer: AVFoundation.AVPlayer)
  public func playerError(playerError error: Any)
  public func clear()
  @objc override dynamic public func observeValue(forKeyPath keyPath: Swift.String?, of object: Any?, change: [Foundation.NSKeyValueChangeKey : Any]?, context: Swift.UnsafeMutableRawPointer?)
  public func showLog(_ message: Swift.String)
  @objc deinit
}
public protocol SigmaSSAIInterface {
  func onSessionFail(_ message: Swift.String)
  func onSessionInitSuccess(_ videoUrl: Swift.String)
  func onChangeVideoUrlSuccess(_ videoUrl: Swift.String)
  func onTracking(_ message: Swift.String, _ eventType: Swift.String)
}
